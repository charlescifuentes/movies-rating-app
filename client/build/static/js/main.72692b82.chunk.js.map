{"version":3,"sources":["components/Hero.js","react-auth0-spa.js","components/MoviesList.js","components/MoviesForm.js","components/Movies.js","views/Home.js","views/Profile.js","utils/history.js","components/PrivateRoute.js","components/Loading.js","components/NavBar.js","components/Footer.js","components/MoviesListDetail.js","App.js","serviceWorker.js","index.js","assets/loading.svg"],"names":["Hero","className","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","MoviesList","props","Container","movies","map","movie","key","id","Row","Col","md","to","state","movieData","base_url","src","poster_path","width","alt","overview","release_date","vote_average","MoviesForm","useState","date","setDate","useEffect","Form","onSubmit","e","preventDefault","getMovieList","rDate","FormGroup","Label","for","Input","type","name","value","onChange","persist","target","Button","color","size","block","Movies","setMovies","showTable","setShowTable","isAuthenticated","a","fetch","then","res","json","response","results","Home","Profile","loading","user","picture","email","JSON","stringify","createBrowserHistory","PrivateRoute","Component","component","path","rest","loginWithRedirect","appState","targetUrl","fn","render","Loading","NavBar","isOpen","setIsOpen","logout","logoutWithRedirect","returnTo","origin","Navbar","dark","expand","NavbarBrand","NavLink","tag","RouterNavLink","exact","activeClassName","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","DropdownItem","header","icon","style","minHeight","Footer","MoviesListDetail","ratingValue","setRatingValue","autor","comment","currentComent","setCurrentComment","comments","setComments","getComments","axios","get","console","log","data","catch","error","fontSize","count","newRating","color2","nickname","post","length","index","faUserEdit","faComment","App","MoviesListDetails","Boolean","hostname","match","ReactDOM","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","onRedirectCallBack","push","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.72692b82.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Hero = () => (\r\n  <header className='bg-color p-5 text-white text-center mb-5'>\r\n    <h1 className='mb-4'>MOVIES RATING APP</h1>\r\n    <p className='lead'>\r\n      Web Application that allow to query a Movie List from the \"The Movie DB\",\r\n      also the user can give ratings and make comments\r\n    </p>\r\n  </header>\r\n);\r\n\r\nexport default Hero;\r\n","// src/react-auth0-spa.js\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (\r\n        window.location.search.includes('code=') &&\r\n        window.location.search.includes('state=')\r\n      ) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nconst MoviesList = props => (\r\n  <Container>\r\n    {props.movies.map(movie => (\r\n      <div key={movie.id} className='mb-2 border rounded shadow bg-color'>\r\n        <Row>\r\n          <Col md='4'>\r\n            <Link\r\n              to={{\r\n                pathname: '/movieslistdetail',\r\n                state: {\r\n                  movieData: movie,\r\n                  base_url: props.base_url\r\n                }\r\n              }}\r\n            >\r\n              <figure className='img-effect'>\r\n                <img\r\n                  src={props.base_url + movie.poster_path}\r\n                  width='100%'\r\n                  alt='Poster'\r\n                />\r\n                <figcaption>\r\n                  <h3>See Now</h3>\r\n                </figcaption>\r\n              </figure>\r\n            </Link>\r\n          </Col>\r\n          <Col md='8' className='p-4 text-white'>\r\n            <h2>\r\n              <Link\r\n                to={{\r\n                  pathname: '/movieslistdetail',\r\n                  state: {\r\n                    movieData: movie,\r\n                    base_url: props.base_url\r\n                  }\r\n                }}\r\n              >\r\n                {movie.title}\r\n              </Link>\r\n            </h2>\r\n            <p>{movie.overview}</p>\r\n            <div>\r\n              <h3 className='border border-white d-inline-block p-3'>\r\n                Release Date : {movie.release_date}\r\n              </h3>\r\n            </div>\r\n            <div>\r\n              <h4 className='border border-white d-inline-block p-3'>\r\n                Vote Average : {movie.vote_average}\r\n              </h4>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    ))}\r\n  </Container>\r\n);\r\n\r\nexport default MoviesList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Input, Form, Label, FormGroup, Button } from 'reactstrap';\r\n\r\nconst MoviesForm = props => {\r\n  const [date, setDate] = useState(props.date);\r\n\r\n  useEffect(() => {\r\n    setDate(props.date);\r\n  }, [props]);\r\n\r\n  const handleChange = e => {\r\n    e.persist();\r\n    setDate({ ...date, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.getMovieList(date.rDate);\r\n  };\r\n\r\n  return (\r\n    <div className='d-flex justify-content-center'>\r\n      <Form\r\n        onSubmit={handleSubmit}\r\n        className='shadow p-4 mb-2 bg-white rounded'\r\n      >\r\n        <FormGroup>\r\n          <Label for='rDate'>Selecciona un año</Label>\r\n          <Input\r\n            type='select'\r\n            name='rDate'\r\n            id='rDate'\r\n            value={date.rDate}\r\n            onChange={handleChange}\r\n          >\r\n            <option>2017</option>\r\n            <option>2018</option>\r\n            <option>2019</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <Button color='info' type='submit' size='lg' block>\r\n          Buscar\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesForm;\r\n","import React, { useState } from 'react';\r\nimport { useAuth0 } from '../react-auth0-spa';\r\nimport MoviesList from './MoviesList';\r\nimport MoviesForm from './MoviesForm';\r\nimport { Container } from 'reactstrap';\r\n\r\nconst Movies = () => {\r\n  const initalFormState = { rDate: '2017' };\r\n\r\n  const [date, setDate] = useState(initalFormState);\r\n  const [movies, setMovies] = useState([]);\r\n  const [showTable, setShowTable] = useState(false);\r\n  const { isAuthenticated } = useAuth0();\r\n  const base_url = 'https://image.tmdb.org/t/p/w500/';\r\n\r\n  const getMovieList = async date => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=22555534f5b29022b079b339a0388c07&language=en-US&sort_by=release_date.asc&include_adult=false&include_video=false&page=1&primary_release_year=${date}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        setMovies(response.results);\r\n        setDate(date);\r\n        setShowTable(true);\r\n      });\r\n  };\r\n\r\n  return isAuthenticated ? (\r\n    <Container>\r\n      <div className='text-center text-white bg-color shadow p-3 mb-3 rounded'>\r\n        <h2>LIST OF MOVIES BY YEAR</h2>\r\n      </div>\r\n      <MoviesForm date={date} getMovieList={getMovieList} />\r\n      {showTable && <MoviesList movies={movies} base_url={base_url} />}\r\n    </Container>\r\n  ) : (\r\n    <Container>\r\n      <div className='text-center text-white bg-color shadow p-3 mb-3 rounded'>\r\n        <h2>Please Login to see All the Movies List</h2>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React, { Fragment } from 'react';\r\nimport Hero from '../components/Hero';\r\nimport Movies from '../components/Movies';\r\n\r\nconst Home = () => (\r\n  <Fragment>\r\n    <Hero />\r\n    <Movies />\r\n  </Fragment>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useAuth0 } from '../react-auth0-spa';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nconst Profile = () => {\r\n  const { loading, user } = useAuth0();\r\n\r\n  if (loading || !user) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Container className='p-5'>\r\n      <Row>\r\n        <Col md='4'>\r\n          <img src={user.picture} alt='Profile' />\r\n        </Col>\r\n        <Col md='8'>\r\n          <h2>{user.name}</h2>\r\n          <p>{user.email}</p>\r\n        </Col>\r\n      </Row>\r\n      <div className='mt-3 p-3 bg-dark text-white'>\r\n        <code>{JSON.stringify(user, null, 2)}</code>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useAuth0 } from '../react-auth0-spa';\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (loading || isAuthenticated) {\r\n      return;\r\n    }\r\n\r\n    const fn = async () => {\r\n      await loginWithRedirect({\r\n        appState: { targetUrl: path }\r\n      });\r\n    };\r\n    fn();\r\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n  const render = props =>\r\n    isAuthenticated === true ? <Component {...props} /> : null;\r\n\r\n  return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport loading from '../assets/loading.svg';\r\n\r\nconst Loading = () => (\r\n  <div className='spinner'>\r\n    <img src={loading} alt='Loading' />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { useState } from 'react';\r\nimport { useAuth0 } from '../react-auth0-spa';\r\nimport { NavLink as RouterNavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport {\r\n  Collapse,\r\n  Container,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\nconst NavBar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutWithRedirect = () =>\r\n    logout({\r\n      returnTo: window.location.origin\r\n    });\r\n\r\n  return (\r\n    <div className='nav-container'>\r\n      <Navbar color='info' dark expand='md'>\r\n        <Container>\r\n          <NavbarBrand>\r\n            <NavLink\r\n              tag={RouterNavLink}\r\n              to='/'\r\n              exact\r\n              activeClassName='router-link-exact-active'\r\n            >\r\n              MOVIE RATING APP\r\n            </NavLink>\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className='mr-auto' navbar>\r\n              <NavItem>\r\n                <NavLink\r\n                  tag={RouterNavLink}\r\n                  to='/'\r\n                  exact\r\n                  activeClassName='router-link-exact-active'\r\n                >\r\n                  Home\r\n                </NavLink>\r\n              </NavItem>\r\n              {isAuthenticated && (\r\n                <NavItem>\r\n                  <NavLink\r\n                    tag={RouterNavLink}\r\n                    to='/profile'\r\n                    exact\r\n                    activeClassName='router-link-exact-active'\r\n                  >\r\n                    Profile\r\n                  </NavLink>\r\n                </NavItem>\r\n              )}\r\n            </Nav>\r\n            <Nav className='d-none d-md-block' navbar>\r\n              {!isAuthenticated && (\r\n                <NavItem>\r\n                  <Button\r\n                    id='qsLoginBtn'\r\n                    color='warning'\r\n                    className='btn-margin'\r\n                    onClick={() => loginWithRedirect({})}\r\n                  >\r\n                    Log in\r\n                  </Button>\r\n                </NavItem>\r\n              )}\r\n              {isAuthenticated && (\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret id='profileDropDown'>\r\n                    <img\r\n                      src={user.picture}\r\n                      alt='Profile'\r\n                      className='nav-user-profile rounded-circle'\r\n                      width='50'\r\n                    />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <DropdownItem header>{user.name}</DropdownItem>\r\n                    <DropdownItem\r\n                      tag={RouterNavLink}\r\n                      to='/profile'\r\n                      className='dropdown-profile'\r\n                      activeClassName='router-link-exact-active'\r\n                    >\r\n                      <FontAwesomeIcon icon='user' className='mr-3' /> Profile\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      id='qsLogoutBtn'\r\n                      onClick={() => logoutWithRedirect()}\r\n                    >\r\n                      <FontAwesomeIcon icon='power-off' className='mr-3' /> Log\r\n                      out\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              )}\r\n            </Nav>\r\n            {!isAuthenticated && (\r\n              <Nav className='d-md-none' navbar>\r\n                <NavItem>\r\n                  <Button\r\n                    id='qsLoginBtn'\r\n                    color='warning'\r\n                    block\r\n                    onClick={() => loginWithRedirect({})}\r\n                  >\r\n                    Log in\r\n                  </Button>\r\n                </NavItem>\r\n              </Nav>\r\n            )}\r\n            {isAuthenticated && (\r\n              <Nav\r\n                className='d-md-none justify-content-between'\r\n                navbar\r\n                style={{ minHeight: 170 }}\r\n              >\r\n                <NavItem>\r\n                  <span className='user-info'>\r\n                    <img\r\n                      src={user.picture}\r\n                      alt='Profile'\r\n                      className='nav-user-profile d-inline-block rounded-circle mr-3'\r\n                      width='50'\r\n                    />\r\n                    <h6 className='d-inline-block'>{user.name}</h6>\r\n                  </span>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <FontAwesomeIcon icon='user' className='mr-3' />\r\n                  <RouterNavLink\r\n                    to='/profile'\r\n                    activeClassName='router-link-exact-active'\r\n                  >\r\n                    Profile\r\n                  </RouterNavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <FontAwesomeIcon icon='power-off' className='mr-3' />\r\n                  <RouterNavLink\r\n                    to='#'\r\n                    id='qsLogoutBtn'\r\n                    onClick={() => logoutWithRedirect()}\r\n                  >\r\n                    Log out\r\n                  </RouterNavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            )}\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className='bg-color p-3 mt-5 text-center text-white'>\r\n    Movies Rating App By <small>Charles Developer</small>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAuth0 } from '../react-auth0-spa';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button\r\n} from 'reactstrap';\r\nimport ReactStars from 'react-rating-stars-component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserEdit, faComment } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst MoviesListDetail = props => {\r\n  const initialFormState = { autor: '', comment: '' };\r\n\r\n  const { movieData, base_url } = props.location.state;\r\n  const { user } = useAuth0();\r\n  const [ratingValue, setRatingValue] = useState('');\r\n  const [currentComent, setCurrentComment] = useState(initialFormState);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n  }, [props]);\r\n\r\n  const ratingChanged = newRating => {\r\n    console.log(newRating);\r\n    setRatingValue(newRating);\r\n  };\r\n\r\n  const getComments = async () => {\r\n    await axios\r\n      .get('/api/comments')\r\n      .then(function(response) {\r\n        console.log(response.data);\r\n        setComments(response.data);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.persist();\r\n    setCurrentComment({ ...currentComent, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    const comment = {\r\n      user: user.nickname,\r\n      comment: currentComent.comment\r\n    };\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post('/api/comments', {\r\n        user: comment.user,\r\n        comment: comment.comment\r\n      })\r\n      .then(function(response) {\r\n        console.log(response.data.data);\r\n        setComments([...comments, comment]);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n\r\n    currentComent.comment = '';\r\n  };\r\n\r\n  return (\r\n    <Container className='py-5'>\r\n      <div className='text-center text-white text-uppercase bg-color shadow p-3 mb-3 rounded'>\r\n        <h2>{movieData.title}</h2>\r\n      </div>\r\n      <div className='mb-2 p-5 border rounded shadow bg-color'>\r\n        <Row>\r\n          <Col md='4'>\r\n            <img\r\n              src={base_url + movieData.poster_path}\r\n              width='100%'\r\n              alt='Poster'\r\n              className='img-thumbnail'\r\n            />\r\n          </Col>\r\n          <Col md='8' className='text-white'>\r\n            <p style={{ fontSize: '20px' }} className='text-justify'>\r\n              {movieData.overview}\r\n            </p>\r\n            <div className='my-2'>\r\n              <h3 className='border border-white d-inline-block p-3'>\r\n                Release Date : {movieData.release_date}\r\n              </h3>\r\n            </div>\r\n            <div className='my-2'>\r\n              <h4 className='border border-white d-inline-block p-3'>\r\n                Vote Average : {movieData.vote_average}\r\n              </h4>\r\n            </div>\r\n            <div className='my-2'>\r\n              <h4 className='border border-white d-inline-block p-3'>\r\n                Give your Rating:\r\n                <ReactStars\r\n                  count={5}\r\n                  onChange={ratingChanged}\r\n                  size={24}\r\n                  color2={'#ffd700'}\r\n                />\r\n                <small>Your Current Rating: {ratingValue}</small>\r\n              </h4>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className='mb-5 bg-info mt-4 p-3'>\r\n          <Col md='6'>\r\n            <div className='text-white mb-3'>\r\n              <h3>Insert a Comment:</h3>\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                  <Label>Inser a Comment</Label>\r\n                  <Input\r\n                    type='textarea'\r\n                    name='comment'\r\n                    id='comment'\r\n                    value={currentComent.comment}\r\n                    onChange={handleChange}\r\n                  ></Input>\r\n                </FormGroup>\r\n                <Button type='submit' className='float-right' color='warning'>\r\n                  Comentar\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n          <Col md='6'>\r\n            <div className='text-white'>\r\n              <ul className='list-unstyled'>\r\n                {comments.length > 0 ? (\r\n                  comments.map((comment, index) => (\r\n                    <li key={index} className='border-bottom border-white mt-3'>\r\n                      <p>\r\n                        <FontAwesomeIcon icon={faUserEdit} /> {comment.user}\r\n                      </p>\r\n                      <p className='ml-4'>\r\n                        <FontAwesomeIcon icon={faComment} /> {comment.comment}\r\n                      </p>\r\n                    </li>\r\n                  ))\r\n                ) : (\r\n                  <p>There is no Comments</p>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MoviesListDetail;\r\n","import React from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './views/Home';\r\nimport Profile from './views/Profile';\r\nimport history from './utils/history';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport { useAuth0 } from './react-auth0-spa';\r\n\r\nimport Loading from './components/Loading';\r\nimport NavBar from './components/NavBar';\r\nimport Footer from './components/Footer';\r\nimport MoviesListDetails from './components/MoviesListDetail';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const { loading } = useAuth0();\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <div className='App d-flex flex-column h-100'>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path='/' exact component={Home} />\r\n          <PrivateRoute path='/profile' component={Profile} />\r\n          <Route path='/movieslistdetail' component={MoviesListDetails} />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Auth0Provider } from './react-auth0-spa';\r\nimport config from './auth_config.json';\r\nimport history from './utils/history';\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallBack = appState => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={config.domain}\r\n    client_id={config.clientId}\r\n    redirect_uri={window.location.origin}\r\n    onRedirectCallBack={onRedirectCallBack}\r\n  >\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.4184a2a4.svg\";"],"sourceRoot":""}